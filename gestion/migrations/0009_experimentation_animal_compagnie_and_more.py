# Generated by Django 5.2.3 on 2025-06-14 17:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gestion', '0008_usagerpro'),
    ]

    operations = [
        migrations.AddField(
            model_name='experimentation',
            name='animal_compagnie',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='animal_compagnie_detail',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='boite_clefs',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='boite_clefs_detail',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='causes_interruption',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='commentaire_visite',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='coucher_lever_autonome',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='date_visite',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='event_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='event_time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='frequence_lever_nuit',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='gir',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='hebergement_personne',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='medecin_traitant',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='membre_ri2s',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='motif_desinstallation',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='nombre_etages',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='nombre_pieces_vie',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='nombre_sorties_definitives',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='otonome_installee',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='prises_proches',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='situation',
            field=models.CharField(blank=True, choices=[('en_couple', 'En couple'), ('seul', 'Seul')], max_length=20),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='teleassistance',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='teleassistance_detail',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='experimentation',
            name='type_logement',
            field=models.CharField(blank=True, choices=[('maison', 'Maison'), ('appartement', 'Appartement'), ('residence_senior', 'Résidence sénior'), ('residence_autonomie', 'Résidence autonomie')], max_length=20),
        ),
        migrations.AlterField(
            model_name='beneficiaire',
            name='email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.CreateModel(
            name='CapteurDisposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('borne_appel', 'Borne d’appel'), ('medaillon', 'Médaillon'), ('actimetrie', 'Actimétrie'), ('nappe_pression', 'Nappe de pression'), ('capteurs_of', 'Capteurs O/F'), ('capteurs_of_ir', 'Capteurs O/F (IR)')], max_length=20)),
                ('is_installed', models.BooleanField(default=False)),
                ('experimentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_capteurs', to='gestion.experimentation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CapteurInstallation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('borne_appel', 'Borne d’appel'), ('medaillon', 'Médaillon'), ('actimetrie', 'Actimétrie'), ('nappe_pression', 'Nappe de pression'), ('capteurs_of', 'Capteurs O/F'), ('capteurs_of_ir', 'Capteurs O/F (IR)')], max_length=20)),
                ('is_installed', models.BooleanField(default=False)),
                ('experimentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_capteurs', to='gestion.experimentation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentationFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('formulaire_ri2s', 'Formulaire RI2S'), ('consentement_telegrafik', 'Consentement TELEGRAFIK'), ('bon_installation', 'Bon d’installation'), ('consentement_ri2s', 'Consentement RI2S')], max_length=30)),
                ('file', models.FileField(upload_to='experimentations/files/')),
                ('experimentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='gestion.experimentation')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionnelSante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('etablissement', models.CharField(max_length=200)),
                ('profession', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('experimentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professionnels_sante', to='gestion.experimentation')),
            ],
        ),
    ]
